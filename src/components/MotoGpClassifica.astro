---
type Pilot = {
  id: string;
  position: number;
  rider: {
    full_name: string;
    country: {
      name: string;
    };
  };
  team: {
    name: string;
  };
  constructor: {
    name: string;
  };
  points: number;
};

const url =
  "https://api.motogp.pulselive.com/motogp/v1/results/standings?seasonUuid=dd12382e-1d9f-46ee-a5f7-c5104db28e43&categoryUuid=e8c110ad-64aa-4e8e-8a86-f2f152f6a942";
let standings: Pilot[] = [];

try {
  const response = await fetch(url);
  if (response.ok) {
    const data = await response.json();
    
    standings = data.classification as Pilot[];
  } else {
    console.error("Errore nel recupero dei dati:", response.statusText);
  }
} catch (error) {
  console.error("Errore di connessione:", error.message);
}

function getTeamClass(teamName) {
  switch (teamName) {
    case "Prima Pramac Racing":
      return "border-pramac";
    case "Ducati Lenovo Team":
      return "border-ducati";
    case "Monster Energy Yamaha MotoGP Team":
      return "border-yamaha";
    case "Repsol Honda Team":
      return "border-honda";
    case "Team Suzuki Ecstar":
      return "border-suzuki";
    case "Aprilia Racing":
      return "border-aprilia";
    case "CASTROL Honda LCR":
      return "border-lcr";
    case "Gresini Racing MotoGP":
      return "border-gresini";
    case "Red Bull KTM Factory Racing":
      return "border-ktm";
    case "Pertamina Enduro VR46 Racing Team":
      return "border-vr46";
    case "Red Bull GASGAS Tech3":
      return "border-tech3";
    case "Trackhouse Racing":
      return "border-trackhouse";
    default:
      return "border-default"; // Classe per un colore di default
  }
}
---

<div class="card w-full bg-base-200 shadow-xl">
    <div class="card-body">
        <h2 class="card-title">Classifica Piloti MotoGP 2024</h2>
      
        {
          standings.length > 0 ? (
            <table class="table w-full">
              <thead>
                <tr>
                 
                  <th class="text-left">Nome Pilota</th>
                  <th class="text-left">Team</th>
                  <th class="text-left">Punti</th>
                </tr>
              </thead>
              <tbody>
                {standings.map((pilot, index) => (
                  <tr class={`${getTeamClass(pilot.team.name)}`}>
                    <td>{index + 1} - {pilot.rider.full_name}</td>
                    <td>{pilot.team.name} - {pilot.constructor.name}</td>
                    <td>{pilot.points}</td>
                  </tr>
                ))}
              </tbody>
            </table>
          ) : (
            <p>Nessun dato disponibile</p>
          )
        }
      </div>
      
</div>
